{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to JSGameEngine","text":"<p>JSGameEngine is a simple game engine written in JavaScript.</p> <p>Explore the documentation to get started with the engine, or dive into the examples to see it in action.</p>"},{"location":"index.html#project-layout","title":"Project layout","text":"<pre><code>docs            # The documentation files you are currently reading.\ndocs-src        # The source files for the documentation you are currently reading.\nExamples/       # A collection of small example projects created during the engine's development.\nProjects/       # The folder where your game projects will live.\nTemplates/      # Project templates to help kickstart new projects.\nGameEngine.js   # The core of the game engine itself.\n</code></pre>"},{"location":"getting-started.html","title":"Getting Started: Initializing Your Project","text":"<p>To get started with your new project, you can use the provided initialization scripts. Depending on your operating system, you can use either <code>ProjectInit.bat</code> for Windows or <code>ProjectInit.sh</code> for Unix-based systems (Linux, macOS).</p>"},{"location":"getting-started.html#windows","title":"Windows","text":"<ul> <li>Open a Command Prompt.</li> <li>Navigate to the directory where <code>ProjectInit.bat</code> is located.</li> <li>Run the script by typing:</li> </ul> <pre><code>ProjectInit.bat\n</code></pre> <ul> <li>Follow the on-screen instructions to complete the initialization.</li> </ul>"},{"location":"getting-started.html#unix-based-systems-linux-macos","title":"Unix-based Systems (Linux, macOS)","text":"<ul> <li>Open a terminal.</li> <li>Navigate to the directory where <code>ProjectInit.sh</code> is located.</li> <li>Make the script executable (if it is not already) by running:</li> </ul> <pre><code>chmod +x ProjectInit.sh\n</code></pre> <ul> <li>Run the script by typing:</li> </ul> <pre><code>./ProjectInit.sh\n</code></pre> <ul> <li>Follow the on-screen instructions to complete the initialization.</li> </ul> <p>Once the initialization is complete, your project will be set up and ready for development. Happy coding!</p>"},{"location":"advanced/template/custom.html","title":"Custom Template","text":"<p>In this section, we will explain how to create a custom template.</p>"},{"location":"advanced/template/custom.html#creating-a-basic-custom-template","title":"Creating a Basic Custom Template","text":"<p>Creating a custom template is simple. To get started, create a new folder in the <code>Templates\\</code> directory and name it according to your template. </p> <p>Once the folder is created, you have your custom template. If you want to include the current game engine in your template, refer to the next section on <code>Advanced Templating</code> for more details.</p>"},{"location":"advanced/template/custom.html#advanced-templating","title":"Advanced Templating","text":"<p>To take full advantage of custom templates, you can use a <code>.template.config</code> file to define more advanced behavior when initializing your template.</p>"},{"location":"advanced/template/custom.html#creating-the-template-config-file","title":"Creating the Template Config File","text":"<p>In your template folder, create a new file named <code>.template.config</code>.</p>"},{"location":"advanced/template/custom.html#template-config-options","title":"Template Config Options","text":"<p>The following configuration options are currently supported:</p> <ul> <li><code>EnginePath=</code>: Specifies the location where the game engine should be copied when the template is initialized.</li> <li><code>DeleteOnInit=</code>: If set to <code>1</code>, the configuration file will be deleted after initialization.</li> </ul>"},{"location":"advanced/template/custom.html#example","title":"Example","text":"<p>Here\u2019s an example of a <code>.template.config</code> file:</p> <pre><code>EnginePath=.\nDeleteOnInit=1\n</code></pre> <p>When a template with this config file is initialized it will copy the game engine to the project root folder and then delete the config file</p>"},{"location":"documentation/GameEngine.html","title":"GameEngine Class","text":""},{"location":"documentation/GameEngine.html#overview","title":"Overview","text":"<p>The <code>GameEngine</code> class is responsible for managing the game loop, handling input, rendering objects, and managing game objects. It provides methods to start and stop the game, handle keyboard events, and manage game objects.</p>"},{"location":"documentation/GameEngine.html#constructor","title":"Constructor","text":""},{"location":"documentation/GameEngine.html#constructorcanvas-size-new-vector2500-500","title":"<code>constructor(Canvas, Size = new Vector2(500, 500))</code>","text":"<p>Creates an instance of the GameEngine.</p> <ul> <li>Canvas: The canvas element used for rendering the game.</li> <li>Size: The size of the game screen (default is <code>new Vector2(500, 500)</code>).</li> </ul>"},{"location":"documentation/GameEngine.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/GameEngine.html#iskeyreleasedkey","title":"<code>IsKeyReleased(key)</code>","text":"<p>Checks whether a key has just been released.</p> <ul> <li>key: string representation of key to check.</li> <li>Returns: <code>boolean</code> True if key has just been released, else returns False.</li> </ul>"},{"location":"documentation/GameEngine.html#iskeypressedkey","title":"<code>IsKeyPressed(key)</code>","text":"<p>Checks whether a key has just been pressed.</p> <ul> <li>key: string representation of key to check.</li> <li>Returns: <code>boolean</code> True if key has just been pressed, else returns False.</li> </ul>"},{"location":"documentation/GameEngine.html#iskeydownkey","title":"<code>IsKeyDown(key)</code>","text":"<p>Checks whether a key is currently being held down.</p> <ul> <li>key: string representation of key to check.</li> <li>Returns: <code>boolean</code> True if key is currently held down, else returns False.</li> </ul>"},{"location":"documentation/GameEngine.html#ismousereleasedbutton","title":"<code>IsMouseReleased(button)</code>","text":"<p>Checks whether a mouse button has just been released.</p> <ul> <li>button: string representation of button to check.</li> <li>Returns: <code>boolean</code> True if button has just been released, else returns False.</li> </ul>"},{"location":"documentation/GameEngine.html#ismousepressedbutton","title":"<code>IsMousePressed(button)</code>","text":"<p>Checks whether a mouse button has just been pressed.</p> <ul> <li>button: string representation of button to check.</li> <li>Returns: <code>boolean</code> True if button has just been pressed, else returns False.</li> </ul>"},{"location":"documentation/GameEngine.html#ismousedownbutton","title":"<code>IsMouseDown(button)</code>","text":"<p>Checks whether a mouse button is currently being held down.</p> <ul> <li>button: string representation of button to check.</li> <li>Returns: <code>boolean</code> True if button is currently held down, else returns False.</li> </ul>"},{"location":"documentation/GameEngine.html#getmouseposition","title":"<code>GetMousePosition()</code>","text":"<p>Returns the current mouse position in screen space.</p> <ul> <li>Returns: <code>Vector2</code> mouse position in screen space.</li> </ul>"},{"location":"documentation/GameEngine.html#ismouseovercanvas","title":"<code>IsMouseOverCanvas()</code>","text":"<p>Returns check of whether the mouse is over the game screen</p> <ul> <li>key: string representation of key to check.</li> <li>Returns: <code>boolean</code> True if mouse is over the game screen, else returns False</li> </ul>"},{"location":"documentation/GameEngine.html#addobjectobject","title":"<code>AddObject(object)</code>","text":"<p>Adds a <code>GameObject</code> to the engine.</p> <ul> <li>object: The <code>GameObject</code> instance to add to the engine.</li> <li>Throws: <code>Error</code> if the object is not an instance of <code>GameObject</code> or its subclass.</li> </ul>"},{"location":"documentation/GameEngine.html#remobjectobject","title":"<code>RemObject(object)</code>","text":"<p>Removes a <code>GameObject</code> from the engine.</p> <ul> <li>object: The <code>GameObject</code> instance to remove.</li> </ul>"},{"location":"documentation/GameEngine.html#getcollidingobjectsobject","title":"<code>GetCollidingObjects(object)</code>","text":"<p>Gets all objects that collide with the specified object.</p> <ul> <li>object: The <code>GameObject</code> instance to check collision for.</li> <li>Returns: <code>GameObject[]</code> List of <code>GameObject</code>s that collide with the provided object.</li> </ul>"},{"location":"documentation/GameEngine.html#start","title":"<code>Start()</code>","text":"<p>Starts the engine logic.</p>"},{"location":"documentation/GameEngine.html#stop","title":"<code>Stop()</code>","text":"<p>Stops the engine logic when the frame is finished processing.</p>"},{"location":"documentation/GameEngine.html#setloopfunctioncall","title":"<code>SetLoopFunction(call)</code>","text":"<p>Sets the loop callback function, which gets called once every frame before the draw call.</p> <ul> <li>call: <code>CallableFunction</code> to be called every frame.</li> </ul>"},{"location":"documentation/GameEngine.html#setinitfunctioncall","title":"<code>SetInitFunction(call)</code>","text":"<p>Sets the initialize callback function, which gets called once before the engine fully starts.</p> <ul> <li>call: <code>CallableFunction</code> to be called during initialization.</li> </ul>"},{"location":"documentation/GameEngine.html#worldtoscreenspacepos","title":"<code>worldToScreenSpace(pos)</code>","text":"<p>Converts a world position to a screen position.</p> <ul> <li>pos: <code>Vector2</code> World position.</li> <li>Returns: <code>Vector2</code> Screen position.</li> </ul>"},{"location":"documentation/GameEngine.html#screentoworldspacepos","title":"<code>screenToWorldSpace(pos)</code>","text":"<p>Converts a screen position to a world position.</p> <ul> <li>pos: <code>Vector2</code> Screen position.</li> <li>Returns: <code>Vector2</code> World position.</li> </ul>"},{"location":"documentation/GameEngine.html#private-methods","title":"Private Methods","text":"<p>These methods are intended for internal use only and are not part of the public API.</p>"},{"location":"documentation/GameEngine.html#keydowneventhandlerevent","title":"<code>KeyDownEventHandler(event)</code>","text":"<p>Handles key down events.</p> <ul> <li>event: <code>KeyboardEvent</code> string representation of key to check.</li> </ul>"},{"location":"documentation/GameEngine.html#keyupeventhandlerevent","title":"<code>KeyUpEventHandler(event)</code>","text":"<p>Handles key up events.</p> <ul> <li>event: <code>KeyboardEvent</code> string representation of key to check.</li> </ul>"},{"location":"documentation/GameEngine.html#drawscenedelta","title":"<code>#DrawScene(delta)</code>","text":"<p>Renders the current game frame.</p> <ul> <li>delta: Time since the last frame.</li> </ul>"},{"location":"documentation/GameEngine.html#createobjectrenderorderlist","title":"<code>#CreateObjectRenderOrderList()</code>","text":"<p>Recreates the internal layer-ordered list of objects to be drawn.</p>"},{"location":"documentation/GameEngine.html#getrotatedcornersposition-size-rotation","title":"<code>#getRotatedCorners(position, size, rotation)</code>","text":"<p>Calculates the rotated corners of a rectangle.</p> <ul> <li>position: <code>Vector2</code> Position of the rectangle.</li> <li>size: <code>Vector2</code> Size of the rectangle.</li> <li>rotation: Rotation angle in degrees.</li> <li>Returns: <code>Vector2[]</code> Array of rotated corners.</li> </ul>"},{"location":"documentation/GameEngine.html#projectverticesvertices-axis","title":"<code>#projectVertices(vertices, axis)</code>","text":"<p>Projects vertices onto an axis.</p> <ul> <li>vertices: Array of <code>Vector2</code> vertices.</li> <li>axis: <code>Vector2</code> axis to project onto.</li> <li>Returns: Object with <code>min</code> and <code>max</code> projection values.</li> </ul>"},{"location":"documentation/GameEngine.html#overlapsproja-projb","title":"<code>#overlaps(projA, projB)</code>","text":"<p>Checks if two projections overlap.</p> <ul> <li>projA: First projection.</li> <li>projB: Second projection.</li> <li>Returns: <code>boolean</code> True if projections overlap, else False.</li> </ul>"},{"location":"documentation/GameEngine.html#checkobbcollisionposa-za-anglea-posb-zb-angleb","title":"<code>#checkOBBCollision(posA, zA, angleA, posB, zB, angleB)</code>","text":"<p>Checks for collision between two oriented bounding boxes (OBB).</p> <ul> <li>posA: Position of the first OBB.</li> <li>zA: Size of the first OBB.</li> <li>angleA: Rotation angle of the first OBB.</li> <li>posB: Position of the second OBB.</li> <li>zB: Size of the second OBB.</li> <li>angleB: Rotation angle of the second OBB.</li> <li>Returns: <code>boolean</code> True if collision detected, else False.</li> </ul>"},{"location":"documentation/GameEngine.html#loop","title":"<code>#Loop()</code>","text":"<p>Engine main loop.</p>"},{"location":"documentation/Globals.html","title":"Globals","text":"<p>This document outlines the globally available properties and functions provided by the code. These include predefined shapes, utility functions, and the resource manager.</p>"},{"location":"documentation/Globals.html#global-constants","title":"Global Constants","text":""},{"location":"documentation/Globals.html#basicsquarepath","title":"<code>BasicSquarePath</code>","text":"<p>A predefined <code>Path2D</code> object representing a square centered at <code>(0,0)</code>, with a width and height of <code>10</code> units.</p>"},{"location":"documentation/Globals.html#basicspherepath","title":"<code>BasicSpherePath</code>","text":"<p>A predefined <code>Path2D</code> object representing a circle (sphere) centered at <code>(0,0)</code>, with a radius of <code>5</code>.</p>"},{"location":"documentation/Globals.html#basictrianglepath","title":"<code>BasicTrianglePath</code>","text":"<p>A predefined <code>Path2D</code> object representing an upward-facing triangle centered at <code>(0,0)</code> with a width and height of <code>10</code> units.</p>"},{"location":"documentation/Globals.html#utility-functions","title":"Utility Functions","text":""},{"location":"documentation/Globals.html#getuuid","title":"<code>GetUUID()</code>","text":"<p>Generates a random unique identifier.</p> <p>Returns: - <code>{string}</code> A random UUID-like string.</p>"},{"location":"documentation/Globals.html#resource-management","title":"Resource Management","text":""},{"location":"documentation/Globals.html#resmanager","title":"<code>resManager</code>","text":"<p>An instance of <code>ResourceManager</code>, responsible for handling image loading and caching.</p>"},{"location":"documentation/Overview.html","title":"Overview","text":"<p>Welcome to the code documentation for JSGameEngine.  In this documentation, we will cover the different classes and functions that make up the core of the game engine. Below, you will find links to detailed pages for each class and their respective functionalities.</p>"},{"location":"documentation/Overview.html#contents","title":"Contents","text":"<ul> <li>GameEngine</li> <li>GameObjects<ul> <li>GameObject</li> <li>VisibleObject</li> <li>CustomShapeObject</li> <li>ImageObject</li> <li>ImageAnimObject</li> <li>TextObject</li> </ul> </li> <li>Vector2</li> <li>ResourceManager</li> <li>Globals</li> </ul> <p>This overview serves as a starting point to navigate through the different components of the game engine.</p>"},{"location":"documentation/ResourceManager.html","title":"ResourceManager Class","text":""},{"location":"documentation/ResourceManager.html#overview","title":"Overview","text":"<p>Important!A <code>ResourceManager</code> object is automatically instanced as <code>resManager</code> when the engine code gets loaded. The <code>ResourceManager</code> class handles resources such as loaded images and allows for caching of these resources.</p>"},{"location":"documentation/ResourceManager.html#constructor","title":"Constructor","text":""},{"location":"documentation/ResourceManager.html#new-resourcemanager","title":"<code>new ResourceManager()</code>","text":"<p>Creates an instance of the <code>ResourceManager</code> class.</p>"},{"location":"documentation/ResourceManager.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/ResourceManager.html#loadimagepath","title":"<code>LoadImage(path)</code>","text":"<p>Loads an image and saves it to the cache.</p> <ul> <li><code>path</code> (String): The image path or URL.</li> <li>Returns: <code>Promise&lt;Image&gt;</code> - A promise that resolves to the loaded image.</li> </ul>"},{"location":"documentation/ResourceManager.html#clearcache","title":"<code>ClearCache()</code>","text":"<p>Clears the cache of the resource manager.</p>"},{"location":"documentation/Vector2.html","title":"Vector2 Class","text":""},{"location":"documentation/Vector2.html#overview","title":"Overview","text":"<p>The <code>Vector2</code> class represents a 2D vector with basic vector operations such as addition, subtraction, multiplication, division, normalization, and dot product. This class is useful for handling positions, velocities, and directions in 2D space.</p>"},{"location":"documentation/Vector2.html#static-properties","title":"Static Properties","text":"<ul> <li><code>Vector2.Up</code>: A vector pointing up (0, 1).</li> <li><code>Vector2.Down</code>: A vector pointing down (0, -1).</li> <li><code>Vector2.Left</code>: A vector pointing left (-1, 0).</li> <li><code>Vector2.Right</code>: A vector pointing right (1, 0).</li> <li><code>Vector2.Zero</code>: A vector with zero magnitude (0, 0).</li> </ul>"},{"location":"documentation/Vector2.html#constructor","title":"Constructor","text":""},{"location":"documentation/Vector2.html#new-vector2x-y","title":"<code>new Vector2(x, y)</code>","text":"<p>Creates an instance of a 2D vector with the given coordinates.</p> <ul> <li><code>x</code> (number): The x-coordinate of the vector.</li> <li><code>y</code> (number): The y-coordinate of the vector.</li> </ul>"},{"location":"documentation/Vector2.html#static-methods","title":"Static Methods","text":""},{"location":"documentation/Vector2.html#vector2adda-b","title":"<code>Vector2.add(a, b)</code>","text":"<p>Adds vector a to vector b.</p> <ul> <li><code>a</code> (Vector2): The first vector.</li> <li><code>b</code> (Vector2): The second vector.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#vector2suba-b","title":"<code>Vector2.sub(a, b)</code>","text":"<p>Subtracts vector b from vector a.</p> <ul> <li><code>a</code> (Vector2): The first vector.</li> <li><code>b</code> (Vector2): The second vector.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#vector2multa-x","title":"<code>Vector2.mult(a, x)</code>","text":"<p>Multiplies vector a with scalar x.</p> <ul> <li><code>a</code> (Vector2): The vector.</li> <li><code>x</code> (number): The scalar value.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#vector2diva-x","title":"<code>Vector2.div(a, x)</code>","text":"<p>Divides vector a by scalar x.</p> <ul> <li><code>a</code> (Vector2): The vector.</li> <li><code>x</code> (number): The scalar value.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#vector2magnitudea","title":"<code>Vector2.magnitude(a)</code>","text":"<p>Calculates the magnitude of vector a.</p> <ul> <li><code>a</code> (Vector2): The vector.</li> <li>Returns: <code>number</code> - The magnitude of the vector.</li> </ul>"},{"location":"documentation/Vector2.html#vector2normalizea","title":"<code>Vector2.normalize(a)</code>","text":"<p>Normalizes vector a.</p> <ul> <li><code>a</code> (Vector2): The vector.</li> <li>Returns: <code>Vector2</code> - The normalized vector.</li> </ul>"},{"location":"documentation/Vector2.html#vector2dota-b","title":"<code>Vector2.dot(a, b)</code>","text":"<p>Calculates the dot product of vector a and vector b.</p> <ul> <li><code>a</code> (Vector2): The first vector.</li> <li><code>b</code> (Vector2): The second vector.</li> <li>Returns: <code>number</code> - The dot product.</li> </ul>"},{"location":"documentation/Vector2.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/Vector2.html#addb","title":"<code>add(b)</code>","text":"<p>Adds vector b to the current vector.</p> <ul> <li><code>b</code> (Vector2): The vector to add.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#subb","title":"<code>sub(b)</code>","text":"<p>Subtracts vector b from the current vector.</p> <ul> <li><code>b</code> (Vector2): The vector to subtract.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#multx","title":"<code>mult(x)</code>","text":"<p>Multiplies the current vector with scalar x.</p> <ul> <li><code>x</code> (number): The scalar value.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#divx","title":"<code>div(x)</code>","text":"<p>Divides the current vector by scalar x.</p> <ul> <li><code>x</code> (number): The scalar value.</li> <li>Returns: <code>Vector2</code> - The resulting vector.</li> </ul>"},{"location":"documentation/Vector2.html#magnitude","title":"<code>magnitude()</code>","text":"<p>Calculates the magnitude of the current vector.</p> <ul> <li>Returns: <code>number</code> - The magnitude of the vector.</li> </ul>"},{"location":"documentation/Vector2.html#normalize","title":"<code>normalize()</code>","text":"<p>Normalizes the current vector.</p> <ul> <li>Returns: <code>Vector2</code> - The normalized vector.</li> </ul>"},{"location":"documentation/Vector2.html#dotb","title":"<code>dot(b)</code>","text":"<p>Calculates the dot product of the current vector and vector b.</p> <ul> <li><code>b</code> (Vector2): The vector to dot with.</li> <li>Returns: <code>number</code> - The dot product.</li> </ul>"},{"location":"documentation/GameObjects/CustomShapeObject.html","title":"CustomShapeObject Class","text":"<p>(Extends <code>VisibleObject</code>)</p>"},{"location":"documentation/GameObjects/CustomShapeObject.html#overview","title":"Overview","text":"<p>The <code>CustomShapeObject</code> class represents a game object that renders custom vector shapes. It supports both filled and outlined shapes, allowing for flexible shape customization.</p>"},{"location":"documentation/GameObjects/CustomShapeObject.html#constructor","title":"Constructor","text":""},{"location":"documentation/GameObjects/CustomShapeObject.html#new-customshapeobjectoptions","title":"<code>new CustomShapeObject(options)</code>","text":"<p>Creates an instance of <code>CustomShapeObject</code>.</p> <ul> <li><code>options</code> (Object) - Inherits all options from <code>VisibleObject</code>, plus:</li> <li><code>shape</code> (Path2D, default: <code>new Path2D()</code>) - The shape to be drawn.</li> <li><code>color</code> (string, default: <code>'white'</code>) - The fill color of the shape.</li> <li><code>drawAsOutline</code> (boolean, default: <code>false</code>) - Whether to draw the shape as an outline.</li> <li><code>outlineThickness</code> (number, default: <code>1</code>) - The thickness of the outline.</li> </ul>"},{"location":"documentation/GameObjects/CustomShapeObject.html#properties","title":"Properties","text":"<ul> <li><code>shape</code> (Path2D) - The custom shape to be drawn.</li> <li><code>color</code> (string) - The color of the shape.</li> <li><code>drawAsOutline</code> (boolean) - Whether the shape is drawn as an outline.</li> <li><code>outlineThickness</code> (number) - The thickness of the outline.</li> </ul>"},{"location":"documentation/GameObjects/CustomShapeObject.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/GameObjects/CustomShapeObject.html#drawdt-ctx","title":"<code>draw(dt, ctx)</code>","text":"<p>!!! warning     This method is managed by the engine and should not be called directly.     The engine calls <code>draw()</code> after applying transformations to the canvas.</p> <ul> <li><code>dt</code> (number) - Time since last frame.</li> <li><code>ctx</code> (CanvasRenderingContext2D) - The canvas rendering context.</li> </ul>"},{"location":"documentation/GameObjects/GameObject.html","title":"GameObject Class","text":""},{"location":"documentation/GameObjects/GameObject.html#overview","title":"Overview","text":"<p>The <code>GameObject</code> class is the base class for all entities in the scene. It provides essential transformation properties such as position, rotation, scale, and optional collision handling. Other game objects extend from this class.</p>"},{"location":"documentation/GameObjects/GameObject.html#constructor","title":"Constructor","text":""},{"location":"documentation/GameObjects/GameObject.html#new-gameobjectoptions","title":"<code>new GameObject(options)</code>","text":"<p>Creates a new instance of <code>GameObject</code>.</p> <ul> <li><code>options</code> (Object) - Configuration options for the game object.</li> <li><code>position</code> (Vector2, default: <code>new Vector2(0,0)</code>) - The object's position.</li> <li><code>rotation</code> (number, default: <code>0</code>) - The rotation angle of the object in degrees.</li> <li><code>scale</code> (Vector2, default: <code>new Vector2(1,1)</code>) - The scale of the object.</li> <li><code>colliderSize</code> (Vector2, default: <code>new Vector2(10,10)</code>) - The collider size.</li> <li><code>colliderOffset</code> (Vector2, default: <code>new Vector2(0,0)</code>) - The offset of the collider relative to position.</li> <li><code>drawCollider</code> (boolean, default: <code>false</code>) - Whether to visually draw the collider for debugging.</li> <li><code>name</code> (string, default: <code>'GameObject'</code>) - The name of the game object.</li> <li><code>tags</code> (string[], default: <code>[]</code>) - An array of tags for categorization.</li> </ul>"},{"location":"documentation/GameObjects/GameObject.html#properties","title":"Properties","text":"<ul> <li><code>id</code> (number) - Unique identifier for the object.</li> <li><code>position</code> (Vector2) - The object's position.</li> <li><code>rotation</code> (number) - The rotation angle of the object.</li> <li><code>scale</code> (Vector2) - The scale of the object.</li> <li><code>colliderSize</code> (Vector2) - The collider size.</li> <li><code>colliderOffset</code> (Vector2) - The offset of the collider relative to position.</li> <li><code>drawCollider</code> (boolean) - Whether the collider is drawn for debugging.</li> <li><code>tags</code> (string[]) - An array of tags assigned to the object.</li> </ul>"},{"location":"documentation/GameObjects/GameObject.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/GameObjects/GameObject.html#localup","title":"<code>localUp()</code>","text":"<p>Gets the current up vector based on the object's rotation.</p> <ul> <li>Returns: <code>Vector2</code> - The up vector.</li> </ul>"},{"location":"documentation/GameObjects/GameObject.html#localright","title":"<code>localRight()</code>","text":"<p>Gets the current right vector based on the object's rotation.</p> <ul> <li>Returns: <code>Vector2</code> - The right vector.</li> </ul>"},{"location":"documentation/GameObjects/GameObject.html#movedcolliderposition","title":"<code>movedColliderPosition()</code>","text":"<p>Gets the position of the object's collider after applying rotation and offset.</p> <ul> <li>Returns: <code>Vector2</code> - The adjusted collider position.</li> </ul>"},{"location":"documentation/GameObjects/GameObject.html#scaledcollidersize","title":"<code>scaledColliderSize()</code>","text":"<p>Gets the collider size after applying the object's scale.</p> <ul> <li>Returns: <code>Vector2</code> - The adjusted collider size.</li> </ul>"},{"location":"documentation/GameObjects/ImageAnimObject.html","title":"ImageAnimObject Class","text":"<p>(Extends <code>VisibleObject</code>) </p>"},{"location":"documentation/GameObjects/ImageAnimObject.html#overview","title":"Overview","text":"<p>The <code>ImageAnimObject</code> class represents an animated game object using a sprite sheet. It supports frame-based animation, playback direction, looping, and sprite sheet configuration.</p>"},{"location":"documentation/GameObjects/ImageAnimObject.html#constructor","title":"Constructor","text":""},{"location":"documentation/GameObjects/ImageAnimObject.html#new-imageanimobjectoptions","title":"<code>new ImageAnimObject(options)</code>","text":"<p>Creates an instance of <code>ImageAnimObject</code>.</p> <ul> <li><code>options</code> (Object) - Inherits all options from <code>VisibleObject</code>, plus:</li> <li><code>image</code> (<code>HTMLImageElement</code>, default: <code>new Image()</code>) - The sprite sheet image.</li> <li><code>imageUrl</code> (<code>string|null</code>, default: <code>null</code>) - URL to load a sprite sheet asynchronously.</li> <li><code>horizontalStacked</code> (<code>boolean</code>, default: <code>true</code>) - Whether frames are stacked horizontally.</li> <li><code>spriteColRowCount</code> (<code>Vector2</code>, default: <code>new Vector2(0,0)</code>) - Column and row count in the sprite sheet.</li> <li><code>spriteSize</code> (<code>Vector2</code>, default: <code>new Vector2(0,0)</code>) - The size of each sprite frame.</li> <li><code>overrideDisplaySize</code> (<code>Vector2|null</code>, default: <code>null</code>) - Custom display size for the sprite.</li> <li><code>spriteAmount</code> (<code>number</code>, default: <code>0</code>) - Total number of animation frames.</li> <li><code>currentFrame</code> (<code>number</code>, default: <code>0</code>) - The current frame index.</li> <li><code>fps</code> (<code>number</code>, default: <code>24</code>) - Frames per second for animation playback.</li> <li><code>stopAtEnd</code> (<code>boolean</code>, default: <code>false</code>) - Stops animation when it reaches the last frame.</li> <li><code>reverseAtEnd</code> (<code>boolean</code>, default: <code>false</code>) - Reverses playback direction at the last frame.</li> <li><code>animDirection</code> (<code>number</code>, default: <code>1</code>) - Animation direction (<code>1</code> forward, <code>-1</code> reverse).</li> <li><code>colRowStartOffset</code> (<code>Vector2</code>, default: <code>new Vector2(0,0)</code>) - Start position in the sprite sheet.</li> </ul>"},{"location":"documentation/GameObjects/ImageAnimObject.html#properties","title":"Properties","text":"<ul> <li><code>isPlaying</code> (<code>boolean</code>) - Whether the animation is currently playing.</li> <li><code>timePassed</code> (<code>number</code>) - The elapsed time since animation start.</li> <li><code>totalAnimDuration</code> (<code>number</code>) - The total duration of the animation.</li> </ul>"},{"location":"documentation/GameObjects/ImageAnimObject.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/GameObjects/ImageAnimObject.html#play","title":"<code>Play()</code>","text":"<p>Starts playing the animation.  </p>"},{"location":"documentation/GameObjects/ImageAnimObject.html#pause","title":"<code>Pause()</code>","text":"<p>Pauses the animation.  </p>"},{"location":"documentation/GameObjects/ImageAnimObject.html#reset","title":"<code>Reset()</code>","text":"<p>Resets the animation to its starting frame.  </p>"},{"location":"documentation/GameObjects/ImageAnimObject.html#setspritedatabycolrowcountcolrowcount-spriteamount-1-colrowstartoffset-new-vector200","title":"<code>SetSpriteDataByColRowCount(ColRowCount, SpriteAmount = -1, ColRowStartOffset = new Vector2(0,0))</code>","text":"<p>Sets the sprite sheet configuration using column and row count.  </p> <ul> <li><code>ColRowCount</code> (<code>Vector2</code>) - Column and row count in the sprite sheet.  </li> <li><code>SpriteAmount</code> (<code>number</code>, default: <code>-1</code>) - Number of frames in the animation.  </li> <li><code>ColRowStartOffset</code> (<code>Vector2</code>) - Offset for animation start position.  </li> </ul>"},{"location":"documentation/GameObjects/ImageAnimObject.html#addtimedelta","title":"<code>AddTime(delta)</code>","text":"<p>Advances animation time and updates the frame index.  </p> <ul> <li><code>delta</code> (<code>number</code>) - Time to add to animation progress.  </li> </ul>"},{"location":"documentation/GameObjects/ImageAnimObject.html#drawdt-ctx","title":"<code>draw(dt, ctx)</code>","text":"<p>!!! warning     This method is engine-managed and should not be called manually.     The engine calls <code>draw()</code> after applying transformations to the canvas.</p> <p>Renders the current animation frame to the canvas.</p> <ul> <li><code>dt</code> (<code>number</code>) - Delta time since the last frame.</li> <li><code>ctx</code> (<code>CanvasRenderingContext2D</code>) - The rendering context.</li> </ul>"},{"location":"documentation/GameObjects/ImageObject.html","title":"ImageObject Class","text":"<p>(Extends <code>VisibleObject</code>) </p>"},{"location":"documentation/GameObjects/ImageObject.html#overview","title":"Overview","text":"<p>The <code>ImageObject</code> class represents a visible game object that renders an image. It supports image repetition, scaling, and source cropping overrides.</p>"},{"location":"documentation/GameObjects/ImageObject.html#constructor","title":"Constructor","text":""},{"location":"documentation/GameObjects/ImageObject.html#new-imageobjectoptions","title":"<code>new ImageObject(options)</code>","text":"<p>Creates an instance of <code>ImageObject</code>.  </p> <ul> <li><code>options</code> (Object) - Inherits all options from <code>VisibleObject</code>, plus:</li> <li><code>image</code> (<code>HTMLImageElement</code>, default: <code>new Image()</code>) - The image to be displayed.</li> <li><code>imageUrl</code> (<code>string|null</code>, default: <code>null</code>) - URL to load an image asynchronously.</li> <li><code>repeat</code> (<code>boolean</code>, default: <code>false</code>) - Whether the image should repeat as a pattern.</li> <li><code>overrideDisplaySize</code> (<code>Vector2|null</code>, default: <code>null</code>) - Custom display size for the image.</li> <li><code>overrideImgSourceSize</code> (<code>Vector2|null</code>, default: <code>null</code>) - Custom source size for the image.</li> <li><code>overrideImgSourcePosition</code> (<code>Vector2|null</code>, default: <code>null</code>) - Custom source position for the image.</li> </ul>"},{"location":"documentation/GameObjects/ImageObject.html#properties","title":"Properties","text":"<ul> <li><code>image</code> (<code>HTMLImageElement</code>) - The image displayed by the object.</li> <li><code>repeat</code> (<code>boolean</code>) - Whether the image is repeated as a pattern.</li> <li><code>overrideDisplaySize</code> (<code>Vector2|null</code>) - Custom display size for the image.</li> <li><code>overrideImgSourceSize</code> (<code>Vector2|null</code>) - Custom source size for cropping.</li> <li><code>overrideImgSourcePosition</code> (<code>Vector2|null</code>) - Custom source position for cropping.</li> </ul>"},{"location":"documentation/GameObjects/ImageObject.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/GameObjects/ImageObject.html#imageurl-getter-setter","title":"<code>imageUrl</code> (Getter &amp; Setter)","text":"<ul> <li>Getter: Returns the current image URL.  </li> <li>Setter: Loads an image from the provided URL asynchronously.  </li> </ul>"},{"location":"documentation/GameObjects/ImageObject.html#drawdt-ctx","title":"<code>draw(dt, ctx)</code>","text":"<p>!!! warning     This method is engine-managed and should not be called manually.     The engine calls <code>draw()</code> after applying transformations to the canvas.</p> <p>Renders the image to the canvas, considering cropping, scaling, and repetition.</p> <ul> <li><code>dt</code> (<code>number</code>) - Delta time since the last frame.</li> <li><code>ctx</code> (<code>CanvasRenderingContext2D</code>) - The rendering context.</li> </ul>"},{"location":"documentation/GameObjects/TextObject.html","title":"TextObject Class","text":"<p>(Extends <code>VisibleObject</code>) </p>"},{"location":"documentation/GameObjects/TextObject.html#overview","title":"Overview","text":"<p>The <code>TextObject</code> class represents a visible game object that renders text. It supports customizable fonts, colors, alignment, line height, and optional outline rendering. This is useful for UI elements, dialogue, or in-game labels.</p>"},{"location":"documentation/GameObjects/TextObject.html#constructor","title":"Constructor","text":""},{"location":"documentation/GameObjects/TextObject.html#new-textobjectoptions","title":"<code>new TextObject(options)</code>","text":"<p>Creates an instance of <code>TextObject</code>.</p> <ul> <li><code>options</code> (Object) - Inherits all options from <code>VisibleObject</code>, plus:</li> <li><code>text</code> (<code>string</code>, default: <code>\"new text!\"</code>) - The text content.</li> <li><code>color</code> (<code>string</code>, default: <code>'white'</code>) - The text color.</li> <li><code>drawAsOutline</code> (<code>boolean</code>, default: <code>false</code>) - Whether to draw the text as an outline.</li> <li><code>outlineThickness</code> (<code>number</code>, default: <code>1</code>) - The thickness of the text outline.</li> <li><code>font</code> (<code>string</code>, default: <code>\"30px Verdana\"</code>) - The font styling.</li> <li><code>alignment</code> (<code>string</code>, default: <code>\"left\"</code>) - The text alignment (<code>\"left\"</code>, <code>\"center\"</code>, <code>\"right\"</code>).</li> <li><code>lineHeight</code> (<code>number</code>, default: <code>30</code>) - The line height for multi-line text.</li> </ul>"},{"location":"documentation/GameObjects/TextObject.html#properties","title":"Properties","text":"<ul> <li><code>text</code> (<code>string</code>) - The text content.</li> <li><code>color</code> (<code>string</code>) - The text color.</li> <li><code>font</code> (<code>string</code>) - The font styling.</li> <li><code>alignment</code> (<code>string</code>) - The text alignment.</li> <li><code>lineHeight</code> (<code>number</code>) - The spacing between lines.</li> </ul>"},{"location":"documentation/GameObjects/TextObject.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/GameObjects/TextObject.html#drawdt-ctx","title":"<code>draw(dt, ctx)</code>","text":"<p>!!! warning     This method is engine-managed and should not be called manually.     The engine calls <code>draw()</code> after applying transformations to the canvas.</p> <p>Renders the text onto the canvas.</p> <ul> <li><code>dt</code> (<code>number</code>) - Delta time since the last frame.</li> <li><code>ctx</code> (<code>CanvasRenderingContext2D</code>) - The rendering context.</li> </ul>"},{"location":"documentation/GameObjects/VisibleObject.html","title":"VisibleObject Class","text":"<p>(Extends <code>GameObject</code>)</p>"},{"location":"documentation/GameObjects/VisibleObject.html#overview","title":"Overview","text":"<p>The <code>VisibleObject</code> class extends <code>GameObject</code> and introduces rendering properties. It is designed for objects that can be drawn on the screen. Subclasses such as images, text, and shapes inherit from this class.</p>"},{"location":"documentation/GameObjects/VisibleObject.html#constructor","title":"Constructor","text":""},{"location":"documentation/GameObjects/VisibleObject.html#new-visibleobjectoptions","title":"<code>new VisibleObject(options)</code>","text":"<p>Creates a new instance of <code>VisibleObject</code>.</p> <ul> <li><code>options</code> (Object) - Inherits all options from <code>GameObject</code>, plus:</li> <li><code>layer</code> (number, default: <code>0</code>) - The rendering layer of the object.</li> <li><code>visible</code> (boolean, default: <code>true</code>) - Whether the object is visible.</li> </ul>"},{"location":"documentation/GameObjects/VisibleObject.html#properties","title":"Properties","text":"<ul> <li><code>layer</code> (number) - The object's rendering layer.</li> <li><code>visible</code> (boolean) - Whether the object is visible.</li> </ul>"},{"location":"documentation/GameObjects/VisibleObject.html#instance-methods","title":"Instance Methods","text":""},{"location":"documentation/GameObjects/VisibleObject.html#drawdt-ctx","title":"<code>draw(dt, ctx)</code>","text":"<p>!!! warning     This method is managed by the engine and should not be called directly.     The engine calls <code>draw()</code> after applying transformations to the canvas.</p> <ul> <li><code>dt</code> (number) - Time since the last frame.</li> <li> <p><code>ctx</code> (CanvasRenderingContext2D) - The canvas rendering context.</p> </li> <li> <p>Throws: <code>Error</code> if not implemented in a subclass.</p> </li> </ul>"},{"location":"project-management/Initialise.html","title":"Initializing Your Project","text":"<p>To initialize your new project, you can use the provided initialization scripts. Depending on your operating system, you can use either <code>ProjectInit.bat</code> for Windows or <code>ProjectInit.sh</code> for Unix-based systems (Linux, macOS).</p>"},{"location":"project-management/Initialise.html#windows","title":"Windows","text":"<ul> <li>Open a Command Prompt.</li> <li>Navigate to the directory where <code>ProjectInit.bat</code> is located.</li> <li>Run the script by typing:</li> </ul> <pre><code>ProjectInit.bat\n</code></pre> <ul> <li>Follow the on-screen instructions to complete the initialization.</li> </ul>"},{"location":"project-management/Initialise.html#unix-based-systems-linux-macos","title":"Unix-based Systems (Linux, macOS)","text":"<ul> <li>Open a terminal.</li> <li>Navigate to the directory where <code>ProjectInit.sh</code> is located.</li> <li>Make the script executable (if it is not already) by running:</li> </ul> <pre><code>chmod +x ProjectInit.sh\n</code></pre> <ul> <li>Run the script by typing:</li> </ul> <pre><code>./ProjectInit.sh\n</code></pre> <ul> <li>Follow the on-screen instructions to complete the initialization.</li> </ul> <p>Once the initialization is complete, your project will be set up and ready for development. Happy coding!</p>"}]}